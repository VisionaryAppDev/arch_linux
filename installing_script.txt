# wifi-menu
# iwconfig wlp3s0 essid wifiname
# dhcpcd wlp3s0

## ip link set wlp7s0 down
## netctl restart wlp7s0-123456789



# Create Partition Size
## Create three primary partitions for,
### Root
### Home
### Swap

fdisk -l
fdisk /dev/sda


# Causion!!
#
# => Format partition:
#		mkfs.ext4 /dev/sda1
#		mkfs.ext4 /dev/sda2
#
# => Make swap: mkswap /dev/sda3
#
# => Turn on swap: swapon: /dev/sda3
#
# => mount /dev/sda1 /mnt
#
# => mkdir /mnt/home
#
# => mount /dev/sda2 /mnt/home
#
# press m for help
# Size: 83 886 079 = 40 000 0000 Byte
#
# base vs base-devel:
# - https://www.archlinux.org/groups/x86_64/base/
# - https://www.archlinux.org/groups/x86_64/base-devel/
#
#
######################################################
cp /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.backup
echo "Server = http://mirror.xtom.com/archlinux/\$repo/os/\$arch"  > /etc/pacman.d/mirrorlist
pacstrap /mnt base base-devel
genfstab -U /mnt > /mnt/etc/fstab
arch-chroot /mnt
ln -sf /usr/share/zoneinfo/Asia/Phnom_Penh /etc/localtime
hwclock --systohc
locale-gen
echo "yourpc" >> /etc/hostname
echo -e "127.0.0.1\tlocalhost" > /etc/hosts
echo -e "::1\t\tlocalhost" >> /etc/hosts
echo -e "127.0.1.1\cc.localdomain cc" >> /etc/hosts


mkinitcpio -p linux
passwd
pacman -Syu intel-ucode grub reflector
grub-install /dev/sda ## MAKE SURE THIS IS /DEV/SDA NOT /DEV/SDB or SOMETHING ELSE
grub-mkconfig -o /boot/grub/grub.cfg

# Create service to run Reflector
echo -e "[Unit]\n
		Description=Pacman mirrorlist update\n
		Wants=network-online.target\n
		After=network-online.target\n\n
		[Service]\n
		Type=oneshot\n
		ExecStart=/usr/bin/reflector --protocol https --latest 20 --sort rate --save /etc/pacman.d/mirrorlist\n
		\n
		[Install]\n
		RequiredBy=multi-user.target" >> /etc/systemd/system/reflector.service


# WPA supplicant
# pacman -S wpa_supplicant dhclient dialog
# cat /etc/netctl/my_static_profile
# Interface=enp1s0
# Connection=ethernet
# IP=static
# Address=('192.168.1.10/24')
# Gateway=('92.168.1.1')
# DNS=('192.168.1.1')
#
#
#


# echo -e "\n\n[archlinuxfr]\n
# 			SigLevel = Never\n
# 			Server = http://repo.archlinux.fr/\$arch" >> /etc/pacman.conf
# echo -e "\n\n[archlinuxcn]\n
# SigLevel = Never\n
# Server = http://repo.archlinuxcn.org/$arch" >> /etc/pacman.conf





# INSTALL YAY
cd /tmp
git clone https://aur.archlinux.org/yay.git
cd yay
makepkg -si
## Enable coloring
echo -e "\n\n\n\n\n\n\n\n# MY CONFIGURATION"
echo -e "Color\n"
echo -e "TotalDownload\n"
echo -e "CheckSpace\n"
echo -e "UseDelta     = 0.7\n"
echo -e "VerbosePkgLists\n"
echo -e "RemoteFileSigLevel = Required\n"


# signal-desktop signal
# jdk jdk8
pacman -Syu dhclient tor npm vlc git linux-lts xorg plasma ark dolphin mariadb mongodb netctl redshift transmission-gtk wget bash-completion ntfs-3g curl eog
pacman -Syu linux-lts-headers bleachbit konsole



# INSTALL VIA YAY
yay -Syu firefox-nighty google-chrome-dev intellij-idea-ue-eap jdk-openjdk otf-fira-code ttf-symbola


# Change grub delay
sudo nano /etc/default/grub => GRUB_FORCE_HIDDEN_MENU="true"
pacman -S ufw && ufw enable && ufw status verbos && systemctl enable ufw.service thermald xf86-input-libinput
pacman-optimize samsung_magician



# Installing PSQL: https://www.netarky.com/programming/arch_linux/Arch_Linux_PostgreSQL_database_setup.html
pacman -Syu postgresql

# Before you can do anything, you must initialize a database storage area (cluster) on disk. In file system terms, a database cluster is a single directory under which all data is stored. It is completely up to you where you choose to store your data. There is no default, although locations such as /usr/local/pgsql/data or /var/lib/postgres/data are popular.
sudo mkdir /var/lib/postgres/data

# Change the owner of the /var/lib/postgres directory and its contents to the postgres user (the default user set up by the install):
sudo chown -c -R postgres:postgres /var/lib/postgres

# To initialize a database cluster, use the command initdb, which is installed with PostgreSQL. This must be done as the postgres user, so become this user:
sudo -i -u postgres
initdb -D '/var/lib/postgres/data' # this one is in postgres console

# Start service
sudo systemctl start postgresql

# PostgreSQL is now running. By creating another PostgreSQL user as per your local Arch user ($USER), you can access the PostgreSQL database shell directly instead of having to log in as the postgres user:
createuser -s -U postgres --interactive # after enter your pc username

createdb myDatabaseName
psql -d myDatabaseName
\du


# Allow access from anywhere
sudo echo 'host    all             all              0.0.0.0/0' >> /var/lib/postgres/data/hba_file.conf
sudo echo "listen_addresses = '*'" >> /var/lib/postgres/data/postgresql.conf


# mount opt from home
echo "/home/yourpc/app/opt /opt none bind 0 0" >> /etc/fstab


# Starting Service
systemctl enable thermald.service
systemctl enable mysqld.service
systemctl enable dhcpcd.service
systemctl enable postgresql.service




#Nvidia
https://gist.github.com/joariasl/e58ca997d2581236dc56#install-intel-video-driver


#Cache data
squid
rescached

https://wiki.archlinux.org/index.php/CPU_frequency_scaling
https://wiki.archlinux.org/index.php/Dnscrypt-proxy
https://wiki.archlinux.org/index.php/Swap_on_video_ram





pacman -R vi nano

# install after in Linux system not in live disk
os-prober


# grub-install: cannot find /boot/efi directory
# 1. run mkinitcpio -p linux
# 2. delete os-prober from live disk and reinstall install grub package
# 3. grub-install /dev/sda (make sure it is in sda not sdb)










# INSTALLING PRINTER: https://unix.stackexchange.com/questions/359531/installing-hp-printer-driver-for-arch-linux
# Everything is root
pacman -Sy cups
pacman -S hplip
hp-setup -i
gpasswd -a theUserNameOfPC sys
